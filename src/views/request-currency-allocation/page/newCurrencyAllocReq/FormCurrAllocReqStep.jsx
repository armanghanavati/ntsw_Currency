import React, { useRef, useEffect, useState } from "react";
import {
  Button,
  ComboBox,
  GuideBox,
  Input,
  Modal,
  Table,
  VerticalSpace,
  Tooltip,
} from "../../../../components";
import { Row, Col, Form, Checkbox } from "antd";
import { useLocation } from "react-router-dom";
import { endpoints } from "../../../../services/endpoints";
import { useDispatch, useSelector } from "react-redux";
import { handleMessageModal } from "../../../../state/action-creators";
import axios from "axios";
import Validation from "../../../../utils/Validation";
import themeColors from "../../../../configs/theme";
import SendDocModal from "./sendDocModal";

const FormCurrAllocReqStep = ({
  setAlldata,
  docsData,
  setDocs,
  inputsData,
  handleFilterDeleteFile,
  form,
  handleChangeInputs,
  reqCurrency,
  reqAmount,
  handelCheckBox,
  dealingTypeList,
  currAllocReqComPerList,
  currAllocReqFacLocList,
  repDeadlineTypeList,
  suppLocList,
  rateTypeList,
  reqTypeList,
  errors,
  setOpen,
  open,
  docs,
  tableDocId,
  refreshReq,
  setErrors,
}) => {
  const { state } = useLocation();
  let tableParams = {
    pagination: {
      current: 1,
      pageSize: 25,
    },
  };

  const columns = [
    {
      title: "ÿ±ÿØ€åŸÅ",
      align: "center",
      render: (item, record, index) => (
        <>
          {index +
            1 +
            (Number(tableParams?.pagination?.current || 1) - 1) *
              Number(tableParams.pagination.pageSize || 1)}
        </>
      ),
    },
    {
      title: "ŸÜÿßŸÖ ÿ≥ŸÜÿØ",
      align: "center",
      render: (item, { DocumentName, fullName }, index) => (
        <>{DocumentName ? DocumentName : fullName}</>
      ),
    },
    {
      title: "Ÿæÿ≥ŸàŸÜÿØ ŸÅÿß€åŸÑ",
      align: "center",
      render: (item, { DocumentFormat, format }, index) => (
        <>{DocumentFormat ? DocumentFormat : format}</>
      ),
    },
    {
      title: "ÿπŸÖŸÑ€åÿßÿ™",
      dataIndex: "manufactureCountry",
      align: "center",
      render: (item, record, index) => (
        <div style={{ display: "flex", justifyContent: "center" }}>
          <Button
            backgroundColor={themeColors?.comments?.red}
            onClick={(e) => {
              e.preventDefault();
              handleFilterDeleteFile(index);
            }}
          >
            <i className="fa fa-trash" />
            ÿ≠ÿ∞ŸÅ
          </Button>
        </div>
      ),
    },
  ];

  const allDataOfOrder = state?.dataOfOrder;
  console.log(
    "üöÄ ~ allDataOfOrder:",
    allDataOfOrder?.prfOrderNoStr,
    inputsData?.prfOrderNoStr
  );

  console.log(inputsData?.reqTypeItem);

  return (
    <>
      <Form className="p-1" form={form}>
        <Row>
          <Col md={24} lg={24} xl={12} xxl={8}>
            <Input
              value={allDataOfOrder?.prfOrderNoStr || inputsData?.prfOrderNoStr}
              // value={allDataOfOrder?.prfOrderNoStr}
              readOnly
              name="prfOrderNoStr"
              type="number"
              centerText
              align="right"
              title="ÿ¥ŸÖÿßÿ±Ÿá ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥"
            />
          </Col>
        </Row>
        <Row>
          {!!state?.editCurrAlloc && (
            <>
              <Col
                className="set-field-container rowContainer"
                md={12}
                lg={24}
                xl={12}
                xxl={8}
              >
                <Input
                  type="number"
                  centerText
                  align="right"
                  name="prfVCodeInt"
                  value={inputsData?.prfVCodeInt}
                  readOnly
                  title="ÿ¥ŸÖÿßÿ±Ÿá Ÿæÿ±ŸàŸÜÿØŸá"
                />
              </Col>
              <Col
                className="set-field-container rowContainer"
                md={12}
                lg={24}
                xl={12}
                xxl={8}
              >
                <Input
                  type="number"
                  centerText
                  align="right"
                  value={inputsData?.carRowNoInt}
                  name="carRowNoInt"
                  readOnly
                  title="ÿ¥ŸÖÿßÿ±Ÿá ÿ±ÿØ€åŸÅ"
                />
              </Col>
              <Col
                className="set-field-container rowContainer"
                md={12}
                lg={24}
                xl={12}
                xxl={8}
              >
                <Input
                  value={inputsData?.carVersionInt}
                  name="carVersionInt"
                  readOnly
                  type="number"
                  centerText
                  align="right"
                  title="ŸÜÿ≥ÿÆŸá"
                />
              </Col>
            </>
          )}
          {inputsData?.amountFieldsVisibility && (
            <>
              <Col
                className="set-field-container rowContainer"
                md={12}
                lg={24}
                xl={12}
                xxl={8}
              >
                <Input
                  type="number"
                  centerText
                  align="right"
                  name="allocatedAmountInProformaCurrency "
                  value={inputsData?.allocatedAmountInProformaCurrency}
                  readOnly
                  title="ŸÖÿ®ŸÑÿ∫ ÿ™ÿßŸÖ€åŸÜ ÿ¥ÿØŸá ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®Ÿá ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥"
                  onChange={handleChangeInputs}
                />
              </Col>
              <Col
                className="set-field-container rowContainer"
                md={12}
                lg={24}
                xl={12}
                xxl={8}
              >
                <Input
                  type="number"
                  centerText
                  align="right"
                  name="allocatedAmountInRequestCurrency"
                  // AllocatedAmountInRequestCurrency

                  value={inputsData?.allocatedAmountInRequestCurrency}
                  readOnly
                  title="ŸÖÿ®ŸÑÿ∫ ÿ™ÿßŸÖ€åŸÜ ÿ¥ÿØŸá ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®Ÿá ÿßÿ±ÿ≤ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™"
                  onChange={handleChangeInputs}
                />
              </Col>
              <Col
                className="set-field-container rowContainer"
                md={12}
                lg={24}
                xl={12}
                xxl={8}
              >
                <Input
                  type="number"
                  centerText
                  align="right"
                  name="proformaFishAmountInProformaCurrency"
                  value={inputsData?.proformaFishAmountInProformaCurrency}
                  readOnly
                  title="ŸÖÿ®ŸÑÿ∫ ⁄Øÿ¥ÿß€åÿ¥ ÿßÿπÿ™ÿ®ÿßÿ± Ÿæÿ±ŸàŸÜÿØŸá ÿ®Ÿá ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥"
                  onChange={handleChangeInputs}
                />
              </Col>
            </>
          )}
          <Col className="rowContainer" md={24} lg={24} xl={12} xxl={8}>
            <Input
              name="prfcurNameStr"
              value={inputsData?.prfcurNameStr || allDataOfOrder?.prfcurNameStr}
              readOnly
              title="ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥"
            />
            <Tooltip title="ÿßÿ±ÿ≤ ÿ™ÿπ€å€åŸÜ ÿ¥ÿØŸá ÿØÿ± Ÿæÿ±ŸàŸÜÿØŸá ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ÿ±ÿß ŸÜŸÖÿß€åÿ¥ ŸÖ€å ÿØŸáÿØ." />
          </Col>
          <Col className="rowContainer" md={24} lg={24} xl={12} xxl={8}>
            <div className="w-100">
              <Input
                type="number"
                centerText
                align="right"
                isCurrency
                maxLength={18}
                onChange={handleChangeInputs}
                value={inputsData?.carAmountInProformaCurrencyMny}
                name="carAmountInProformaCurrencyMny"
                title="ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®Ÿá ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥"
                error={errors?.carAmountInProformaCurrencyMny}
                validations={[["decimal", 4]]}
              />
            </div>
            <Tooltip title="ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ™ÿÆÿµ€åÿµ ÿßÿ±ÿ≤ ÿ®ÿ± ÿ≠ÿ≥ÿ® ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ ⁄©Ÿá ÿ™Ÿàÿ≥ÿ∑ ⁄©ÿßÿ±ÿ®ÿ± Ÿàÿßÿ±ÿØ ŸÖ€å‚Äåÿ¥ŸàÿØ. ŸÖÿ¨ŸÖŸàÿπ ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™‚ÄåŸáÿß€å ÿ™ÿÆÿµ€åÿµ ÿßÿ±ÿ≤ €å⁄© ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ŸÜŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ÿßÿ≤ ŸÖÿ®ŸÑÿ∫ ⁄©ŸÑ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ÿ®€åÿ¥ÿ™ÿ± ÿ¥ŸàÿØ." />
          </Col>
        </Row>
        <Row>
          <Col className="rowContainer" md={24} lg={24} xl={12} xxl={8}>
            <ComboBox
              placeholder="ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..."
              preventDefaultSelect={false}
              onChange={handleChangeInputs}
              defaultValue={inputsData?.reqCurrencyItem}
              optionTitle="curNameStr"
              optionValue="curVCodeInt"
              name="reqCurrencyItem"
              options={reqCurrency}
              title="ÿßÿ±ÿ≤ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™"
            />
            <Tooltip title="ÿßŸÜŸàÿπ ÿßÿ±ÿ≤ ÿ™ÿÆÿµ€åÿµ ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ. ÿß€åŸÜ ÿßÿ±ÿ≤ ŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ÿ®ÿß ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ŸÖÿ™ŸÅÿßŸàÿ™ ÿ®ÿßÿ¥ÿØ. ÿØÿ± ÿ≠ÿßŸÑ ÿ≠ÿßÿ∂ÿ± ÿß⁄Øÿ± ÿ™ÿ£ŸÖ€åŸÜ ÿßÿ±ÿ≤ ÿßÿ≤ ŸÖŸÜÿßÿ®ÿπ ÿ®ÿßŸÜ⁄© ŸÖÿ±⁄©ÿ≤€å ÿµŸàÿ±ÿ™ ⁄Ø€åÿ±ÿØÿå ŸÜŸàÿπ ÿßÿ±ÿ≤ ÿ™ÿ£ŸÖ€åŸÜ ŸÜŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ŸÖÿ™ŸÅÿßŸàÿ™ ÿ®ÿß ŸÜŸàÿπ ÿßÿ±ÿ≤ ÿ™ÿÆÿµ€åÿµ ÿ®ÿßÿ¥ÿØ." />
          </Col>
          {/* <GuideBox /> */}
          <Col className="rowContainer" md={24} lg={24} xl={12} xxl={8}>
            <Input
              name="carAmountMny"
              value={!!inputsData?.reqCurrencyItem && inputsData?.carAmountMny}
              type="number"
              centerText
              align="right"
              isCurrency
              disabled
              readOnly="readOnly"
              title="ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™"
            />
            <Tooltip title="ŸÖÿπÿßÿØŸÑ ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®Ÿá ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ÿ®ÿ± ÿ≠ÿ≥ÿ® ÿßÿ±ÿ≤ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ Ÿà ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ÿ¢ŸÜ ÿ®Ÿá ÿµŸàÿ±ÿ™ ÿÆŸàÿØ⁄©ÿßÿ± ÿµŸàÿ±ÿ™ ŸÖ€å‚Äå⁄Ø€åÿ±ÿØ. ÿß€åŸÜ ŸÖÿ®ŸÑÿ∫ ÿØÿ± ÿ≤ŸÖÿßŸÜ ÿß€åÿ¨ÿßÿØ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®Ÿá ÿµŸàÿ±ÿ™ ŸÖŸàŸÇÿ™ ÿ®Ÿá ŸÜÿ±ÿÆ ÿ±Ÿàÿ≤ ÿß€åÿ¨ÿßÿØ ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ŸÖ€å‚Äåÿ¥ŸàÿØ. ÿßŸÖÿß ÿß€åŸÜ ŸÖÿ®ŸÑÿ∫ ÿØÿ± ÿ≤ŸÖÿßŸÜ ÿ™ÿ£€å€åÿØ ŸÜŸáÿß€å€å ÿ®ÿßŸÜ⁄© ŸÖÿ±⁄©ÿ≤€å ÿ®Ÿá ŸÜÿ±ÿÆ ŸáŸÖÿßŸÜ ÿ±Ÿàÿ≤ (ÿ™ÿßÿ±€åÿÆ ÿ™ÿÆÿµ€åÿµ) ŸÇÿ∑ÿπ€å ŸÖ€å‚Äåÿ¥ŸàÿØ. ÿ®Ÿá ÿπÿ®ÿßÿ±ÿ™ ÿØ€å⁄Øÿ± ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®Ÿá ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ÿ´ÿßÿ®ÿ™ Ÿà ÿ®ÿ±ÿßÿ®ÿ± ÿ®ÿß ŸÖŸÇÿØÿßÿ±€å ⁄©Ÿá ⁄©ÿßÿ±ÿ®ÿ± Ÿàÿßÿ±ÿØ ⁄©ÿ±ÿØŸá ÿßÿ≥ÿ™ÿå ÿ®ÿßŸÇ€å ŸÖ€å‚ÄåŸÖÿßŸÜÿØÿõ ÿßŸÖÿß ÿØÿ± ÿ≤ŸÖÿßŸÜ ÿ™ÿÆÿµ€åÿµ ŸÖÿ®ŸÑÿ∫ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ŸÖÿ¨ÿØÿØ ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ŸÖ€å‚Äåÿ¥ŸàÿØ." />
          </Col>
        </Row>
        <Row>
          <Col className="rowContainer" xl={12} md={24} lg={24} xxl={8}>
            <Form.Item
              className="containerCol"
              name="dealingTypeItem"
              initialValue={inputsData?.dealingTypeItem}
            >
              <ComboBox
                placeholder="ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..."
                preventDefaultSelect={false}
                onChange={handleChangeInputs}
                defaultValue={inputsData?.dealingTypeItem}
                optionTitle="cdtNameStr"
                optionValue="cdtVCodeInt"
                name="dealingTypeItem"
                options={dealingTypeList}
                title="ŸÜŸàÿπ ŸÖÿπÿßŸÖŸÑŸá"
              />
            </Form.Item>
            <Tooltip
              title="ÿ¥€åŸàŸá Ÿæÿ±ÿØÿßÿÆÿ™ ÿ®Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ÿÆÿßÿ±ÿ¨€å ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ:
- Ÿæ€åÿ¥‚ÄåŸæÿ±ÿØÿßÿÆÿ™: ŸáŸÖÿßŸÜ ÿ≠ŸàÿßŸÑŸá ÿßÿ±ÿ≤€å ÿßÿ≥ÿ™ ⁄©Ÿá ÿØÿ± ÿ¢ŸÜ Ÿæÿ±ÿØÿßÿÆÿ™ Ÿàÿ¨Ÿá ÿ®Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá Ÿæ€åÿ¥ ÿßÿ≤ ÿØÿ±€åÿßŸÅÿ™ ÿßÿ≥ŸÜÿßÿØ ÿ≠ŸÖŸÑ ÿµŸàÿ±ÿ™ ŸÖ€å‚Äå⁄Ø€åÿ±ÿØÿõ
- ÿ≠ÿ≥ÿßÿ®‚Äåÿ®ÿßÿ≤: Ÿæÿ±ÿØÿßÿÆÿ™ Ÿàÿ¨Ÿá ŸÖÿØÿ™€å Ÿæÿ≥ ÿßÿ≤ ÿØÿ±€åÿßŸÅÿ™ ÿßÿ≥ŸÜÿßÿØ ÿ≠ŸÖŸÑ ÿµŸàÿ±ÿ™ ŸÖ€å‚Äå⁄Ø€åÿ±ÿØÿå ÿ®ÿØŸàŸÜ ÿ¢ŸÜ ⁄©Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ÿ≥ŸÜÿØ€å ŸÖÿßŸÑ€å ÿ≠ÿß⁄©€å ÿßÿ≤ ÿ®ÿØŸá€å ÿÆÿ±€åÿØÿßÿ± ÿØÿ±€åÿßŸÅÿ™ ⁄©ŸÜÿØÿõ
- ÿØ€åÿØÿßÿ±€å: ŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ÿ®ÿ±ÿßÿ™ ÿØ€åÿØÿßÿ±€å €åÿß ÿßÿπÿ™ÿ®ÿßÿ± ÿßÿ≥ŸÜÿßÿØ€å ÿØ€åÿØÿßÿ±€å ÿ®ÿßÿ¥ÿØ ⁄©Ÿá ÿØÿ± ÿ¢ŸÜ Ÿæÿ±ÿØÿßÿÆÿ™ Ÿàÿ¨Ÿá ÿ®Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ÿ®ŸÑÿßŸÅÿßÿµŸÑŸá Ÿæÿ≥ ÿßÿ≤ ÿØÿ±€åÿßŸÅÿ™ ÿßÿ≥ŸÜÿßÿØ ÿ≠ŸÖŸÑ ÿµŸàÿ±ÿ™ ŸÖ€å‚Äå⁄Ø€åÿ±ÿØÿõ
- ŸÖÿØÿ™‚ÄåÿØÿßÿ±: ŸÖ€å‚Äåÿ™ŸàÿßŸÜÿØ ÿ®ÿ±ÿßÿ™ ŸÖÿØÿ™‚ÄåÿØÿßÿ± €åÿß ÿßÿπÿ™ÿ®ÿßÿ± ÿßÿ≥ŸÜÿßÿØ€å ŸÖÿØÿ™‚ÄåÿØÿßÿ± ÿ®ÿßÿ¥ÿØ ⁄©Ÿá ÿØÿ± ÿ¢ŸÜ Ÿæÿ±ÿØÿßÿÆÿ™ Ÿàÿ¨Ÿá ŸÖÿØÿ™€å ŸÖÿ¥ÿÆÿµ Ÿæÿ≥ ÿßÿ≤ ÿØÿ±€åÿßŸÅÿ™ ÿßÿ≥ŸÜÿßÿØ ÿ≠ŸÖŸÑ ÿµŸàÿ±ÿ™ ŸÖ€å‚Äå⁄Ø€åÿ±ÿØÿå ÿßŸÖÿß ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ŸáŸÜ⁄ØÿßŸÖ ŸÖÿ®ÿßÿØŸÑŸá ÿßÿ≥ŸÜÿßÿØ ÿ≠ŸÖŸÑ ÿ≥ŸÜÿØ€å ÿ≠ÿß⁄©€å ÿßÿ≤ ÿ®ÿØŸá€å ÿÆÿ±€åÿØÿßÿ± ÿØÿ±€åÿßŸÅÿ™ ŸÖ€å‚Äå⁄©ŸÜÿØ.
"
            />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <Form.Item className="containerCol" name="currAllocReqComPerItem">
              <ComboBox
                preventDefaultSelect={false}
                placeholder={
                  inputsData?.dealingTypeItem >= 1 ? "ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..." : ""
                }
                onChange={handleChangeInputs}
                defaultValue={inputsData?.currAllocReqComPerItem}
                optionTitle="ccpNameStr"
                optionValue="ccpVCodeInt"
                name="currAllocReqComPerItem"
                options={currAllocReqComPerList}
                disabled={inputsData?.dealingTypeItem >= 1 ? false : true}
                title="ŸÖÿ™ÿπŸáÿØ"
              />
            </Form.Item>
            <Tooltip
              title="ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ ⁄ÜŸá ⁄©ÿ≥€å Ÿæÿ±ÿØÿßÿÆÿ™ ÿßÿ±ÿ≤ ÿ®Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ÿÆÿßÿ±ÿ¨€å ÿ±ÿß ŸÖÿ™ÿπŸáÿØ ÿ¥ÿØŸá ÿßÿ≥ÿ™:
- ÿÆÿ±€åÿØÿßÿ±: ÿØÿ± ÿ¥€åŸàŸá‚ÄåŸáÿß€å Ÿæÿ±ÿØÿßÿÆÿ™ ÿ≠ŸàÿßŸÑŸáÿå ÿ≠ÿ≥ÿßÿ®‚Äåÿ®ÿßÿ≤ÿå ÿ®ÿ±ÿßÿ™ ÿØ€åÿØÿßÿ±€å Ÿà ÿ®ÿ±ÿßÿ™ ŸÖÿØÿ™‚ÄåÿØÿßÿ± ÿ™ÿπŸáÿØ Ÿæÿ±ÿØÿßÿÆÿ™ ÿ®ÿß ÿÆÿ±€åÿØÿßÿ± ÿßÿ≥ÿ™ÿõ
- ÿ®ÿßŸÜ⁄©: ÿØÿ± ÿ¥€åŸàŸá‚ÄåŸáÿß€å Ÿæÿ±ÿØÿßÿÆÿ™ ÿßÿπÿ™ÿ®ÿßÿ± ÿßÿ≥ŸÜÿßÿØ€å ÿØ€åÿØÿßÿ±€å Ÿà ÿßÿπÿ™ÿ®ÿßÿ± ÿßÿ≥ŸÜÿßÿØ€å ŸÖÿØÿ™‚ÄåÿØÿßÿ± ÿ™ÿπŸáÿØ Ÿæÿ±ÿØÿßÿÆÿ™ ÿ®ÿß ÿ®ÿßŸÜ⁄© ÿπÿßŸÖŸÑ ÿßÿ≥ÿ™."
            />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <Form.Item className="containerCol" name="currAllocReqFacLocItem">
              <ComboBox
                preventDefaultSelect={false}
                placeholder={
                  inputsData?.currAllocReqComPerItem >= 1 ? "ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..." : ""
                }
                onChange={handleChangeInputs}
                defaultValue={inputsData?.currAllocReqFacLocItem}
                optionTitle="cflNameStr"
                optionValue="cflVCodeInt"
                name="currAllocReqFacLocItem"
                options={currAllocReqFacLocList}
                disabled={!!inputsData?.currAllocReqComPerItem ? false : true}
                title="ŸÖÿ≠ŸÑ ÿ™ÿ≥Ÿá€åŸÑÿßÿ™"
              />
            </Form.Item>
            <Tooltip title="ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá ÿ®ÿ±ÿß€å Ÿæÿ±ÿØÿßÿÆÿ™ ÿ®Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ÿÆÿßÿ±ÿ¨€åÿå ÿ™ÿ≥Ÿá€åŸÑÿßÿ™ ÿØÿ±€åÿßŸÅÿ™ ÿ¥ÿØŸá ÿ®ÿßÿ¥ÿØÿå ŸÖÿ≠ŸÑ ÿ™ÿ≥Ÿá€åŸÑÿßÿ™ ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØÿõ ÿØÿ± ÿ∫€åÿ± ÿß€åŸÜ ÿµŸàÿ±ÿ™ ÿ®ÿß€åÿØ ŸÖŸÇÿØÿßÿ± ¬´ÿ®ÿØŸàŸÜ ÿ™ÿ≥Ÿá€åŸÑÿßÿ™¬ª ÿßŸÜÿ™ÿÆÿßÿ® ÿ¥ŸàÿØ." />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <Form.Item className="containerCol" name="repDeadlineTypeItem">
              <ComboBox
                preventDefaultSelect={false}
                placeholder={
                  inputsData?.currAllocReqFacLocItem >= 1 ? "ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..." : ""
                }
                onChange={handleChangeInputs}
                defaultValue={inputsData?.repDeadlineTypeItem}
                optionTitle="crdNameStr"
                optionValue="crdVCodeInt"
                name="repDeadlineTypeItem"
                options={repDeadlineTypeList}
                disabled={
                  inputsData?.currAllocReqFacLocItem >= 1 ? false : true
                }
                title="ŸÖŸáŸÑÿ™ ÿ®ÿßÿ≤Ÿæÿ±ÿØÿßÿÆÿ™"
              />
            </Form.Item>
            <Tooltip title="ŸÖŸáŸÑÿ™ ÿÆÿ±€åÿØÿßÿ± ÿ®ÿ±ÿß€å Ÿæÿ±ÿØÿßÿÆÿ™ Ÿàÿ¨Ÿá ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ Ÿà ÿ®Ÿá ÿµŸàÿ±ÿ™ ÿÆŸàÿØ⁄©ÿßÿ± ÿ®ÿ± ÿßÿ≥ÿßÿ≥ ŸÖŸÇÿßÿØ€åÿ± ÿßŸÜÿ™ÿÆÿßÿ® ÿ¥ÿØŸá ÿØÿ± ŸÅ€åŸÑÿØŸáÿß€å ŸÇÿ®ŸÑ€åÿå ŸÖŸÇÿØÿßÿ±ÿØŸá€å ŸÖ€å‚Äåÿ¥ŸàÿØ." />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <Form.Item className="containerCol" name="suppLocItem">
              <ComboBox
                preventDefaultSelect={false}
                placeholder={
                  inputsData?.repDeadlineTypeItem >= 1 ? "ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..." : ""
                }
                onChange={handleChangeInputs}
                defaultValue={inputsData?.suppLocItem}
                optionTitle="ccsNameStr"
                optionValue="ccsVCodeInt"
                options={suppLocList}
                disabled={inputsData?.repDeadlineTypeItem >= 1 ? false : true}
                name="suppLocItem"
                title="ŸÖÿ≠ŸÑ ÿ™ÿßŸÖ€åŸÜ ÿßÿ±ÿ≤"
              />
            </Form.Item>
            <Tooltip title="ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ ÿßÿ±ÿ≤ Ÿæÿ±ÿØÿßÿÆÿ™€å ÿ®Ÿá ŸÅÿ±Ÿàÿ¥ŸÜÿØŸá ÿÆÿßÿ±ÿ¨€å ÿßÿ≤ ⁄ÜŸá ŸÖÿ≠ŸÑ€å ÿ™ÿ£ŸÖ€åŸÜ ŸÖ€å‚Äåÿ¥ŸàÿØ. ÿß€åŸÜ ŸÅ€åŸÑÿØ ŸÜÿ®ÿß€åÿØ ÿ®ÿß ŸÅ€åŸÑÿØ ŸÖÿ≠ŸÑ ÿ™ÿ£ŸÖ€åŸÜ ÿßÿ±ÿ≤ ÿ´ÿ®ÿ™ ÿ≥ŸÅÿßÿ±ÿ¥ ÿØÿ± ÿ™ŸÜÿßŸÇÿ∂ ÿ®ÿßÿ¥ÿØ. ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá ÿ™ÿ£ŸÖ€åŸÜ ÿßÿ±ÿ≤ ÿßÿ≤ ŸÖŸÜÿßÿ®ÿπ ÿ®ÿßŸÜ⁄© ŸÖÿ±⁄©ÿ≤€å ÿµŸàÿ±ÿ™ ⁄Ø€åÿ±ÿØÿå ÿßÿπŸÖ ÿßÿ≤ ÿ¢ŸÜ ⁄©Ÿá ŸÜÿ±ÿÆ ÿ™ÿ±ÿ¨€åÿ≠€å €åÿß ÿ¢ÿ≤ÿßÿØ ÿØÿßÿ¥ÿ™Ÿá ÿ®ÿßÿ¥ÿØÿå ÿ®ÿß€åÿØ ⁄Øÿ≤€åŸÜŸá ¬´ÿ®ÿßŸÜ⁄© ŸÖÿ±⁄©ÿ≤€å¬ª ÿßŸÜÿ™ÿÆÿßÿ® ÿ¥ŸàÿØ." />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <Form.Item className="containerCol" name="rateTypeItem">
              <ComboBox
                preventDefaultSelect={false}
                placeholder={
                  inputsData?.suppLocItem >= 1 ? "ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..." : ""
                }
                onChange={handleChangeInputs}
                defaultValue={inputsData?.rateTypeItem}
                optionTitle="ccrNameStr"
                optionValue="ccrVCodeInt"
                options={rateTypeList}
                disabled={inputsData?.suppLocItem >= 1 ? false : true}
                name="rateTypeItem"
                title="ŸÜÿ±ÿÆ ÿßÿ±ÿ≤"
              />
            </Form.Item>
            <Tooltip title="ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ ÿßÿ±ÿ≤ ÿ®ÿß ⁄ÜŸá ŸÜÿ±ÿÆ€å ÿÆÿ±€åÿØÿßÿ±€å ŸÖ€å‚Äåÿ¥ŸàÿØ. ÿ™ŸÜŸáÿß ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá ŸÖÿ≠ŸÑ ÿ™ÿ£ŸÖ€åŸÜ ÿßÿ±ÿ≤ ¬´ÿ®ÿßŸÜ⁄© ŸÖÿ±⁄©ÿ≤€å¬ª ÿßŸÜÿ™ÿÆÿßÿ® ÿ¥ÿØŸá ÿ®ÿßÿ¥ÿØÿå ÿßŸÖ⁄©ÿßŸÜ ÿßŸÜÿ™ÿÆÿßÿ® ¬´ÿ¢ÿ≤ÿßÿØ¬ª Ÿà ¬´ÿ™ÿ±ÿ¨€åÿ≠€å¬ª Ÿàÿ¨ŸàÿØ ÿØÿßÿ±ÿØ. ÿ®ÿ±ÿß€å ÿ≥ÿß€åÿ± ŸÖÿ≠ŸÑ‚ÄåŸáÿß€å ÿ™ÿ£ŸÖ€åŸÜ ÿßÿ±ÿ≤ÿå ÿ®Ÿá ÿµŸàÿ±ÿ™ ÿÆŸàÿØ⁄©ÿßÿ± ŸÖŸÇÿØÿßÿ± ¬´ÿ¢ÿ≤ÿßÿØ¬ª ÿßŸÜÿ™ÿÆÿßÿ® ŸÖ€å‚Äåÿ¥ŸàÿØ." />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <Form.Item className="containerCol" name="reqTypeItem">
              <ComboBox
                preventDefaultSelect={false}
                placeholder={
                  inputsData?.rateTypeItem >= 1 ? "ÿ¨ÿ≥ÿ™ÿ¨Ÿà ⁄©ŸÜ€åÿØ..." : ""
                }
                onChange={handleChangeInputs}
                defaultValue={inputsData?.reqTypeItem}
                optionTitle="crtNameStr"
                optionValue="crtVCodeInt"
                options={reqTypeList}
                disabled={inputsData?.rateTypeItem >= 1 ? false : true}
                name="reqTypeItem"
                title="ŸÜŸàÿπ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™"
              />
            </Form.Item>
            <Tooltip title="ŸáÿØŸÅ ÿßÿ≤ ÿØÿ±€åÿßŸÅÿ™ ÿßÿ±ÿ≤ ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØÿõ ŸÇÿ±ÿßÿ± ÿßÿ≥ÿ™ ÿß€åŸÜ ŸÖÿ®ŸÑÿ∫ ÿ®ÿ±ÿß€å ⁄ÜŸá ÿ®ÿÆÿ¥€å ÿßÿ≤ Ÿáÿ≤€åŸÜŸá‚ÄåŸáÿß€å Ÿàÿßÿ±ÿØÿßÿ™ ÿµÿ±ŸÅ ÿ¥ŸàÿØÿü ÿ®ÿ±ÿß€å Ÿæÿ±ÿØÿßÿÆÿ™ ŸÖÿ®ÿßŸÑÿ∫ ŸÇ€åÿØ ÿ¥ÿØŸá ÿØÿ± Ÿæ€åÿ¥‚ÄåŸÅÿß⁄©ÿ™Ÿàÿ±ÿå ÿ®ÿß€åÿØ €å⁄©€å ÿßÿ≤ ⁄Øÿ≤€åŸÜŸá‚ÄåŸáÿß€å ¬´Ÿæ€åÿ¥‚ÄåŸæÿ±ÿØÿßÿÆÿ™¬ªÿå ¬´ŸÖ€åÿßŸÜ‚ÄåŸæÿ±ÿØÿßÿÆÿ™¬ª €åÿß ¬´ÿßÿµŸÑ¬ª Ÿà ÿ®ÿ±ÿß€å Ÿæÿ±ÿØÿßÿÆÿ™ Ÿáÿ≤€åŸÜŸá‚ÄåŸáÿß€å ÿ™ÿ®ÿØ€åŸÑ Ÿà ÿßŸÜÿ™ŸÇÿßŸÑ ÿßÿ±ÿ≤ ÿ®ÿß€åÿØ ¬´⁄©ÿßÿ±ŸÖÿ≤ÿØ¬ª ÿßŸÜÿ™ÿÆÿßÿ® ÿ¥ŸàÿØ. ⁄Øÿ≤€åŸÜŸá ¬´ÿ≥ŸàÿØ¬ª ÿ™ŸÜŸáÿß ÿØÿ± ŸÖŸàÿßÿ±ÿØ€å ⁄©Ÿá ÿßÿ≤ ÿ™ÿ≥Ÿá€åŸÑÿßÿ™ ÿßÿ≥ÿ™ŸÅÿßÿØŸá ŸÖ€å‚Äåÿ¥ŸàÿØÿå ŸÇÿßÿ®ŸÑ ÿßŸÜÿ™ÿÆÿßÿ® ÿßÿ≥ÿ™." />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <div className="w-100">
              <Input
                isCurrency
                title={
                  !!inputsData?.reqTypeItem
                    ? inputsData?.perMonth
                    : "ŸÖÿØÿ™ ÿ®Ÿá ŸÖÿßŸá"
                }
                type="number"
                centerText
                align="right"
                onChange={handleChangeInputs}
                value={inputsData?.carDeadlinePerMonthInt}
                readOnly={
                  inputsData?.reqTypeItem >= 1 ||
                  inputsData?.deadLineAndExpireDeadLineEditableFlag
                    ? false
                    : "readOnly"
                }
                error={errors?.carDeadlinePerMonthInt}
                validations={[
                  ["maxValue", inputsData?.cfrMaxDeadlinePerMonthInt],
                  ["minValue", 0],
                  ["decimal", 0],
                  ["required"],
                ]}
                name="carDeadlinePerMonthInt"
              />
            </div>
            <Tooltip title="ÿ®Ÿá ÿµŸàÿ±ÿ™ Ÿæ€åÿ¥‚ÄåŸÅÿ±ÿ∂ ÿ®ÿß€åÿØ ŸÖŸÇÿØÿßÿ± 0 ÿØÿ±ÿ¨ ÿ¥ŸàÿØ. ÿ™ŸÜŸáÿß ÿØÿ± ÿµŸàÿ±ÿ™ ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿßÿ≤ ŸÜŸàÿπ ŸÖÿπÿßŸÖŸÑŸá ÿØ€åÿØÿßÿ±€å ÿ®ÿß ÿØÿ±€åÿßŸÅÿ™ ÿ™ÿ≥Ÿá€åŸÑÿßÿ™ ÿßÿ≤ ÿ®ÿßŸÜ⁄© ÿÆÿßÿ±ÿ¨€å (ÿ±€åŸÅÿß€åŸÜÿßŸÜÿ≥) Ÿà ŸÜŸàÿπ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿßÿµŸÑ €åÿß ŸÜŸàÿπ ŸÖÿπÿßŸÖŸÑŸá ŸÖÿØÿ™‚ÄåÿØÿßÿ± ÿ®ÿØŸàŸÜ ÿØÿ±€åÿßŸÅÿ™ ÿ™ÿ≥Ÿá€åŸÑÿßÿ™ (€åŸàÿ≤ÿßŸÜÿ≥) Ÿà ŸÜŸàÿπ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿßÿµŸÑÿå ŸÖŸÖ⁄©ŸÜ ÿßÿ≥ÿ™ ŸÜ€åÿßÿ≤ ÿ®Ÿá ÿØÿ±ÿ¨ ŸÖŸÇÿØÿßÿ±€å ÿØ€å⁄Øÿ± ÿ®ÿßÿ¥ÿØÿõ ÿ®ÿ±ÿß€å ÿØÿ±ÿ¨ ŸÖŸÇÿØÿßÿ± ŸÖŸÜÿßÿ≥ÿ® ÿØÿ± ÿß€åŸÜ ÿ¥ÿ±ÿß€åÿ∑ÿå ÿ®ÿß€åÿØ ÿßÿ≤ ÿ®ÿßŸÜ⁄© ÿπÿßŸÖŸÑ ÿ±ÿßŸáŸÜŸÖÿß€å€å ⁄Øÿ±ŸÅÿ™Ÿá ÿ¥ŸàÿØ.." />
          </Col>
          <Col className="rowContainer" xl={12} md={24} xxl={8}>
            <div className="w-100">
              <Input
                isCurrency
                type="number"
                centerText
                align="right"
                name="carExpireDeadlinePerDayInt"
                value={inputsData?.carExpireDeadlinePerDayInt}
                readOnly={
                  inputsData?.reqTypeItem >= 1 ||
                  inputsData?.deadLineAndExpireDeadLineEditableFlag
                    ? false
                    : "readOnly"
                }
                title={
                  !!inputsData?.reqTypeItem ? inputsData?.perDay : "ŸÖŸáŸÑÿ™ ÿßŸÜŸÇÿ∂ÿßÿ°"
                }
                onChange={handleChangeInputs}
                error={errors?.carExpireDeadlinePerDayInt}
                validations={[
                  ["maxValue", inputsData?.cfrMaxExpireDeadlinePerDayInt],
                  ["minValue", 0],
                  ["required"],
                  ["decimal", 0],
                ]}
              />
            </div>
            <Tooltip title="ŸÖŸáŸÑÿ™ ÿÆÿ±€åÿØ ÿßÿ±ÿ≤ ÿ®ÿ± ÿ≠ÿ≥ÿ® ÿ±Ÿàÿ≤ ÿ±ÿß ŸÖÿ¥ÿÆÿµ ŸÖ€å‚Äå⁄©ŸÜÿØ. ÿØÿ± ÿ≠ÿßŸÑÿ™ ÿπÿßÿØ€å (ÿ®ÿß ŸÖÿØÿ™ ÿ®Ÿá ŸÖÿßŸá 0) ÿ¢ÿÆÿ±€åŸÜ ŸÖŸáŸÑÿ™  ÿÆÿ±€åÿØ ÿßÿ±ÿ≤ ÿ®ÿ±ÿßÿ®ÿ±ÿå ÿ™ÿßÿ±€åÿÆ ÿ™ÿÆÿµ€åÿµ ÿßÿ±ÿ≤ ÿ®Ÿá ÿßÿ∂ÿßŸÅŸá ŸÖŸáŸÑÿ™ ÿßŸÜŸÇÿ∂ÿßÿ≥ÿ™." />
          </Col>
          {inputsData?.cfrFinancialCostTariffInt > 0 && (
            <>
              <Col className="rowContainer" md={24} xxl={8} xl={12}>
                <Input
                  name="carFinancialCostTariffInt"
                  value={inputsData?.cfrFinancialCostTariffInt}
                  readOnly
                  error={errors.carFinancialCostTariffInt}
                  validations={[["required"]]}
                  title="ÿ™ÿπÿ±ŸÅŸá Ÿáÿ≤€åŸÜŸá ŸÖÿßŸÑ€å"
                />
                <Tooltip title="ÿ®Ÿá ÿµŸàÿ±ÿ™ Ÿæ€åÿ¥‚Äå ŸÅÿ±ÿ∂ ŸÖŸÇÿØÿßÿ± ÿ¢ŸÜ ÿÆÿßŸÑ€å ÿßÿ≥ÿ™. ÿ™ŸÜŸáÿß ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá ŸÜŸàÿπ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ¬´⁄©ÿßÿ±ŸÖÿ≤ÿØ¬ª €åÿß ¬´ÿ≥ŸàÿØ¬ª ÿßŸÜÿ™ÿÆÿßÿ® ÿ¥ŸàÿØÿå ÿ®Ÿá ÿµŸàÿ±ÿ™ ÿÆŸàÿØ⁄©ÿßÿ± ŸÖŸÇÿØÿßÿ±ÿØŸá€å ŸÖ€å‚Äåÿ¥ŸàÿØ." />
              </Col>
              <Col className="rowContainer" md={24} xxl={16} xl={16}>
                <Input
                  name="carFinancialCostDescriptionStr"
                  onChange={handleChangeInputs}
                  value={inputsData?.carFinancialCostDescriptionStr}
                  title="ÿ¥ÿ±ÿ≠ Ÿáÿ≤€åŸÜŸá ŸÖÿßŸÑ€å"
                />
                <Tooltip title="ÿ®Ÿá ÿµŸàÿ±ÿ™ Ÿæ€åÿ¥‚ÄåŸÅÿ±ÿ∂ ŸÖŸÇÿØÿßÿ± ÿ¢ŸÜ ÿÆÿßŸÑ€å ÿßÿ≥ÿ™. ÿ™ŸÜŸáÿß ÿØÿ± ÿµŸàÿ±ÿ™€å ⁄©Ÿá ŸÅ€åŸÑÿØ ¬´ÿ™ÿπÿ±ŸÅŸá Ÿáÿ≤€åŸÜŸá ŸÖÿßŸÑ€å¬ª ŸÖŸÇÿØÿßÿ± ÿØÿßÿ¥ÿ™Ÿá ÿ®ÿßÿ¥ÿØÿå ⁄©ÿßÿ±ÿ®ÿ± ÿ®ÿß€åÿØ ÿß€åŸÜ ŸÅ€åŸÑÿØ ÿ±ÿß ŸÜ€åÿ≤ Ÿæÿ± ⁄©ŸÜÿØ." />
              </Col>
            </>
          )}
          {inputsData?.renewalRequestFeasibility && (
            <Col Col id={refreshReq} className="d-flex" xl={24}>
              <Checkbox
                name="appExt"
                value={inputsData?.appExt}
                style={{ paddingTop: "5px" }}
                onChange={handelCheckBox}
              >
                ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ™ŸÖÿØ€åÿØ ÿØÿßÿ±ÿØ
              </Checkbox>
              <Tooltip title="ÿß⁄Øÿ± ⁄©ÿßÿ±ÿ®ÿ± ŸÜ€åÿßÿ≤ ÿ®Ÿá ÿ™ŸÖÿØ€åÿØ ŸÖŸáŸÑÿ™ ÿÆÿ±€åÿØ ÿßÿ±ÿ≤ ÿØÿßÿ¥ÿ™Ÿá ÿ®ÿßÿ¥ÿØ ÿ™€å⁄© ÿ™ŸÖÿØ€åÿØ ÿ±ÿß ÿßŸÜÿ™ÿÆÿßÿ® ŸÖ€å ⁄©ŸÜÿØ. ÿØÿ±ÿµŸàÿ±ÿ™€å⁄©Ÿá ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ™ŸÖÿØ€åÿØ ÿ™ÿßÿ¶€åÿØ ⁄Øÿ±ÿØÿØ ÿ™ÿßÿ±€åÿÆ ÿ™ÿÆÿµ€åÿµ ÿßÿ±ÿ≤ ÿ®ÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å ŸÖ€å ⁄Øÿ±ÿØÿØ Ÿà ÿ∑ÿ®ÿπ ÿ¢ŸÜ ŸÖŸáŸÑÿ™ ÿÆÿ±€åÿØ ÿßÿ±ÿ≤ ÿßÿ≤ ÿ±Ÿàÿ≤ ÿ™ÿßÿ¶€åÿØ ŸÜŸáÿß€å€å ÿ™ŸÖÿØ€åÿØ ŸÖÿ≠ÿßÿ≥ÿ®Ÿá ŸÖ€å ⁄Øÿ±ÿØÿØ." />
            </Col>
          )}
        </Row>
        <Row style={{ marginTop: "20px" }} justify="center">
          <Col lg={15}>
            <Col
              style={{
                width: "100%",
                display: "flex",
                flexDirection: "row",
              }}
              justify="start"
              xl={24}
            >
              <Button
                className="containerCol"
                backgroundColor={themeColors?.btn?.purple}
                onClick={(e) => {
                  e.preventDefault();
                  setErrors({});
                  setDocs([]);
                  setOpen(true);
                }}
              >
                <i class="fa fa-plus" />
                ÿßŸÅÿ≤ŸàÿØŸÜ ŸÖÿ≥ÿ™ŸÜÿØ
              </Button>
              <Tooltip title="ÿØÿ±ÿµŸàÿ±ÿ™€å⁄©Ÿá ÿ®ÿßŸÜ⁄© ÿπÿßŸÖŸÑ ÿ®ÿ±ÿß€å ÿ™ÿßÿ¶€åÿØ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ŸÜ€åÿßÿ≤ ÿ®Ÿá ÿ±Ÿà€åÿ™ ŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ÿØÿßÿ¥ÿ™Ÿá ÿ®ÿßÿ¥ÿØÿå ŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ŸÖŸàÿ±ÿØ ŸÜ€åÿßÿ≤ ÿ™Ÿàÿ≥ÿ∑ ⁄©ÿßÿ±ÿ®ÿ± Ÿæ€åŸàÿ≥ÿ™ ŸÖ€å ⁄Øÿ±ÿØÿØ. ÿßÿ±ÿ≥ÿßŸÑ ŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ŸáŸÖÿ±ÿßŸá ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿßÿ¨ÿ®ÿßÿ±€å ŸÜ€åÿ≥ÿ™ Ÿà ÿ™ŸÜŸáÿß ÿØÿ± ÿµŸàÿ±ÿ™ ÿØÿ±ÿÆŸàÿßÿ≥ÿ™ ÿ®ÿßŸÜ⁄© ÿπÿßŸÖŸÑ ÿµŸàÿ±ÿ™ ŸÖ€å ⁄Ø€åÿ±ÿØ. " />
            </Col>
            <Col id={tableDocId} xl={24}>
              <Table
                hasPageSizeCombo={false}
                dataSource={docsData}
                // dataSource={!open && docs?.length > 0 ? docs || [] : []}
                columns={columns}
                pagination={false}
              />
            </Col>
          </Col>
        </Row>
      </Form>
    </>
  );
};

export default FormCurrAllocReqStep;
